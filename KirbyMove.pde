

//カービィの浮く姿を再現しました。顔のふくらみの変化や、足のたれ具合など、細部までこだわっています。

//説明はほとんどコピペが残っているので、無視していただいても結構です。申し訳ありません。


//背景用
float b;
//モーション用
float x,y,X,Y,J;



void setup(){
  
  size(1100,720);
  
  x=-10;        
  X=1;
  Y=0;
  J=-100;

}


void draw(){


    //ジャンプ(❤投げ)
    if((mousePressed&&J==-100)||(J<=100&&J>-100)){               //ジャンプ時だけカービィ＆背景を止めてジャンプモーションを追加することにしました。

        
        //背景作り
        noStroke();

        for(b=0;b<=72;b=b+1){
            fill(255-1.5*b,255-b/15,255);
            quad(0,720-10*b,1280,720-10*b,1280,720-10*b+10,0,720-10*b+10);
        }//まずbを使って幕が上がるみたいにして背景をつくって、
        //xはx=800でセットしておいて、背景出来上がった後に動かし始めたかったのですが、
        //backgroundをすると背景が消えてしまったので、仕方なくforを使いました。
        //(既習範囲でもできるので、既習範囲ということで・・・。)
        
        
        
        
        //背景(モーション)
        

        
        
        //くも    キャラクターが画面を進んでいるように見せるために、背景の雲をにモーションを付けました。
        


        fill(255,255,255,200);
        ellipse(990-20*x,290,200,100);
        ellipse(1090-20*x,330,200,100);
        ellipse(1000-20*x,360,200,100);
        ellipse(800-20*x,300,200,100);
        ellipse(880-20*x,340,200,100);
        ellipse(710-20*x,360,200,100);

        ellipse(990-500-16*x,290-200,200,100);
        ellipse(1090-500-16*x,330-200,200,100);
        ellipse(1000-500-16*x,360-200,200,100);
        ellipse(800-500-16*x,300-200,200,100);
        ellipse(880-500-16*x,340-200,200,100);

        ellipse(880+500-24*x,340+100,200,100);
        ellipse(990+500-24*x,290+100,200,100);
        ellipse(1090+500-24*x,330+100,200,100);
        ellipse(1000+500-24*x,360+100,200,100);

        ellipse(880-700-25*x,340+100,200,100);
        ellipse(990-700-25*x,290+100,200,100);
        ellipse(1090-700-25*x,330+100,200,100);
        ellipse(1000-700-25*x,360+100,200,100);

        ellipse(800-300-15*x,300+270,200,100);
        ellipse(880-300-15*x,340+270,200,100);
        ellipse(710-300-15*x,360+270,200,100);

        ellipse(990+900-25*x,290+200,200,100);
        ellipse(1090+900-25*x,330+200,200,100);
        ellipse(1000+900-25*x,360+200,200,100);

        ellipse(990+300-33*x,290+300,200,100);
        ellipse(1090+300-33*x,330+300,200,100);
        ellipse(1000+300-33*x,360+300,200,100);

        ellipse(800+300-20*x,300-300,200,100);
        ellipse(880+300-20*x,340-300,200,100);
        ellipse(710+300-20*x,360-300,200,100);

        ellipse(800-900-20*x,300-100,200,100);
        ellipse(880-900-20*x,340-100,200,100);
        ellipse(710-900-20*x,320-100,200,100);

        ellipse(1500+990-30*x,290,200,100);
        ellipse(1500+1090-30*x,330,200,100);
        ellipse(1500+1000-30*x,360,200,100);
        ellipse(1500+800-30*x,300,200,100);
        ellipse(1500+880-30*x,340,200,100);
        ellipse(1500+710-30*x,360,200,100);

        ellipse(1500+990-500-16*x,290-200,200,100);
        ellipse(1500+1090-500-16*x,330-200,200,100);
        ellipse(1500+1000-500-16*x,360-200,200,100);
        ellipse(1500+800-500-16*x,300-200,200,100);
        ellipse(1500+880-500-16*x,340-200,200,100);

        ellipse(1500+880+500-20*x,340+100,200,100);
        ellipse(1500+990+500-20*x,290+100,200,100);
        ellipse(1500+1090+500-20*x,330+100,200,100);
        ellipse(1500+1000+500-20*x,360+100,200,100);

        ellipse(1500+880-700-20*x,340-100,200,100);
        ellipse(1500+990-700-20*x,290-100,200,100);
        ellipse(1500+1090-700-20*x,330-100,200,100);
        ellipse(1500+1000-700-20*x,360-100,200,100);

        ellipse(1500+800-300-10*x,300+270,200,100);
        ellipse(1500+880-300-10*x,340+270,200,100);
        ellipse(1500+710-300-10*x,360+270,200,100);

        ellipse(1500+990+500-23*x,290-200,200,100);
        ellipse(1500+1090+500-23*x,330-200,200,100);
        ellipse(1500+1000+500-23*x,360-200,200,100);

        ellipse(1500+990+300-20*x,290+300,200,100);
        ellipse(1500+1090+300-20*x,330+300,200,100);
        ellipse(1500+1000+300-20*x,360+300,200,100);

        ellipse(1500+800+300-20*x,300-300,200,100);
        ellipse(1500+880+300-20*x,340-300,200,100);
        ellipse(1500+710+300-20*x,360-300,200,100);

        ellipse(1500+800-900-20*x,300-100,200,100);
        ellipse(1500+880-900-20*x,340-100,200,100);
        ellipse(1500+710-900-20*x,320-100,200,100);
        



        //カービィ＆モーション

        y=130*sin(x)+160;         //ふわふわ浮く感じをsin関数を用いて表現しました。
        translate(50*x+500,y);         //キャラが複雑だったので、こちらの移動はtranslateを使いました。

        strokeJoin(ROUND);



        //はーと(体より後ろ)
        if(J<0){
            
            pushMatrix();  

            translate(250,-100-200*sin(-J*J/4000));

            fill(#FF81C6);
            stroke(#FF81C6);

            scale((J+100)/70);

            arc(45,0,100,100,-PI,0);
            arc(-45,0,100,100,-PI,0);
            triangle(-95+0.25,0,0,100,95-0.25,0);

            rotate(PI/4);

            ellipse(67,0,20,133);

            rotate(-PI/2);

            ellipse(-67,0,20,133);












            popMatrix();  
        }

        strokeWeight(3);
        stroke(#700030);


        //右足
                                    
        fill(#F466A3);                 
        ellipse(x+230,330+(J*J-10000)/80,70,100);  



        //顔+胴体

        pushMatrix();              //カービィの動きを観察すると、浮かぶ瞬間に膨らんでいたのでscaleを用いて拡大させて表現しました。

        translate(250,250+(J*J-10000)/70);
        scale(0.8+1.1*(sin(x+PI*5/6+(1-X)*PI/6)/25));       //空気をかく動作と連動させるために、sin関数を用いました。・・・(＊)
                                                //単にsin関数だけだと顔が消え去ってしまったので、標準値として0.8を設定し、sin(x)を実数で割って膨らみ具合を調整しました。
        fill(#FFCDDE);                           //ここも+PI*5/6によって若干のずれがあったので、(1-X)*PI/6を加えれば対称になりました。
        ellipse(0,0,255,255);

        popMatrix();


        //おてて

        pushMatrix();

        translate(250,250+(J*J-10000)/70);  //体の中心を中心として手を動かすためにまず移動させて


                            
        rotate(sin(-J*J/8000)+PI/3); 
        scale(0.8);

        noStroke();
        ellipse(135-250,0,55,80); 
        strokeWeight(7);
        stroke(#FFC1DC);
        arc(135-250,0,55,80,-sin(x+PI)/5+PI/9,PI/2);           
        strokeWeight(3);
        stroke(#700030);
        arc(135-250,0,90,80,PI/2,PI*3/2);  

        rotate(-sin(-J*J/8000)-PI/3); 

        rotate(-sin(-J*J/8000)-PI/3);               //sin(-J*J/8000)+PI/5 

        noStroke();
        ellipse(115,0,55,80); 
        strokeWeight(7);
        stroke(#FFC1DC);
        arc(115,0,55,80,PI/2,sin(x+PI)/5-PI/9+PI);          
        strokeWeight(3);
        stroke(#700030);
        arc(115,0,90,80,-PI/2,PI/2);  



        popMatrix();




        //顔(パーツ)

        pushMatrix();


        translate(250,250+(J*J-10000)/70);

        scale(0.8+1.1*(sin(x+PI*5/6+(1-X)*PI/6)/25));

        //右目                    //以降、コピペで微調整していたので、回転の調整も加わって値がぐちゃぐちゃになってしまいました。

        stroke(#0A0046);
        fill(#0A0046);
        ellipse(X*(320-350),195-300,20,20);
        quad(X*(320-350-10),195-300,X*(320-350-10),230-300,X*(320-350+10),230-300,X*(320-350+10),195-300);
        ellipse(X*(320-350),230-300,20,20);

        noStroke();
        fill(#008CA8);
        ellipse(X*(320-350),195-300,17,17);
        quad(X*(320-350-17/2),195-300,X*(320-350-17/2),230-300,X*(320-350+17/2),230-300,X*(320-350+17/2),195-300);
        ellipse(X*(320-350),230-300,17,17);

        fill(#0A0046);
        ellipse(X*(320-350),195-300,17,17);
        quad(X*(320-350-17/2),195-300,X*(320-350-17/2),230-310,X*(320-350+17/2),230-310,X*(320-350+17/2),195-300);
        ellipse(X*(320-350),230-310,17,17);

        fill(255,255,255);
        ellipse(X*(320-350),195-300,17,17);
        quad(X*(320-350-17/2),195-300,X*(320-350-17/2),230-330,X*(320-350+17/2),230-330,X*(320-350+17/2),195-300);
        ellipse(X*(320-350),230-330,17,17);



        //左目

        stroke(#0A0046);
        fill(#0A0046);
        ellipse(X*(320-350+60),195-300,20,20);
        quad(X*(320-350-10+60),195-300,X*(320-350-10+60),230-300,X*(320-350+10+60),230-300,X*(320-350+10+60),195-300);
        ellipse(X*(320-350+60),230-300,20,20);
        noStroke();
        fill(#008CA8);
        ellipse(X*(320-350+60),195-300,17,17);
        quad(X*(320-350-17/2+60),195-300,X*(320-350-17/2+60),230-300,X*(320-350+17/2+60),230-300,X*(320-350+17/2+60),195-300);
        ellipse(X*(320-350+60),230-300,17,17);

        fill(#0A0046);
        ellipse(X*(320-350+60),195-300,17,17);
        quad(X*(320-350-17/2+60),195-300,X*(320-350-17/2+60),230-310,X*(320-350+17/2+60),230-310,X*(320-350+17/2+60),195-300);
        ellipse(X*(320-350+60),230-310,17,17);

        fill(255,255,255);
        ellipse(X*(320-350+60),195-300,17,17);
        quad(X*(320-350-17/2+60),195-300,X*(320-350-17/2+60),230-330,X*(320-350+17/2+60),230-330,X*(320-350+17/2+60),195-300);
        ellipse(X*(320-350+60),230-330,17,17);



        //ほっぺ
        fill(#FFAA9F);
        ellipse(60,-60,40,15);
        ellipse(-60,-60,40,15);

        //口


        noStroke();
        fill(#0A0046);
        arc(0,-40,40*sin(-J*J/16000+PI/2),40*sin(-J*J/16000+PI/2),PI,2*PI);
        fill(#eb4d4b);
        arc(0,-40,40*sin(-J*J/16000+PI/2),40*sin(-J*J/16000+PI/2),0,PI);
        ellipse(0,-40,40*sin(-J*J/16000+PI/2),20*sin(-J*J/16000+PI/2));
        strokeWeight(1);
        stroke(#0A0046);
        noFill();
        ellipse(0,-40,40*sin(-J*J/16000+PI/2),40*sin(-J*J/16000+PI/2));


        popMatrix();


        //左足
                    
        strokeWeight(3);
        stroke(#700030);  
        pushMatrix();
                                            
        fill(#F466A3);                 
        ellipse(x+295,330+(J*J-10000)/70,70,100+20*sin(-J*J/8000));  


        //はーと(体より前)

        if(J>=0){
            
            pushMatrix();  

            translate(250,-100-200*sin(-J*J/4000));

            fill(#FF81C6);
            stroke(#FF81C6);

            scale((J+100)/70);

            arc(45,0,100,100,-PI,0);
            arc(-45,0,100,100,-PI,0);
            triangle(-95+0.25,0,0,100,95-0.25,0);

            rotate(PI/4);

            ellipse(67,0,20,133);

            rotate(-PI/2);

            ellipse(-67,0,20,133);

            popMatrix();  
        
        }


        popMatrix();


        J=J+5;
            
    }


    else if (J>100&&J<=170){

        pushMatrix();  

        y=130*sin(x)+160;         //ふわふわ浮く感じをsin関数を用いて表現しました。
        translate(50*x+500,y);         //キャラが複雑だったので、こちらの移動はtranslateを使いました。



        translate(250,-125-200*sin(-10/4));

        fill(#FF81C6);
        stroke(#FF81C6);

        scale(200/70+(J-100)/5);

        arc(45,0,100,100,-PI,0);
        arc(-45,0,100,100,-PI,0);
        triangle(-95+0.25,0,0,100,95-0.25,0);

        rotate(PI/4);

        ellipse(67,0,20,133);

        rotate(-PI/2);

        ellipse(-67,0,20,133);

        popMatrix();  


        J=J+1;

    }
    
    
    else{

        J=-100;
    
        //背景作り
        noStroke();
        for(b=0;b<=72;b=b+1){
            fill(255-1.5*b,255-b/15,255);
            quad(0,720-10*b,1280,720-10*b,1280,720-10*b+10,0,720-10*b+10);
        }//まずbを使って幕が上がるみたいにして背景をつくって、
        //xはx=800でセットしておいて、背景出来上がった後に動かし始めたかったのですが、
        //backgroundをすると背景が消えてしまったので、仕方なくforを使いました。
        //(既習範囲でもできるので、既習範囲ということで・・・。)
        
        
        
        
        //背景(モーション)
        

        
        
        //くも    キャラクターが画面を進んでいるように見せるために、背景の雲をにモーションを付けました。
        


        fill(255,255,255,200);
        ellipse(990-20*x,290,200,100);
        ellipse(1090-20*x,330,200,100);
        ellipse(1000-20*x,360,200,100);
        ellipse(800-20*x,300,200,100);
        ellipse(880-20*x,340,200,100);
        ellipse(710-20*x,360,200,100);

        ellipse(990-500-16*x,290-200,200,100);
        ellipse(1090-500-16*x,330-200,200,100);
        ellipse(1000-500-16*x,360-200,200,100);
        ellipse(800-500-16*x,300-200,200,100);
        ellipse(880-500-16*x,340-200,200,100);

        ellipse(880+500-24*x,340+100,200,100);
        ellipse(990+500-24*x,290+100,200,100);
        ellipse(1090+500-24*x,330+100,200,100);
        ellipse(1000+500-24*x,360+100,200,100);

        ellipse(880-700-25*x,340+100,200,100);
        ellipse(990-700-25*x,290+100,200,100);
        ellipse(1090-700-25*x,330+100,200,100);
        ellipse(1000-700-25*x,360+100,200,100);

        ellipse(800-300-15*x,300+270,200,100);
        ellipse(880-300-15*x,340+270,200,100);
        ellipse(710-300-15*x,360+270,200,100);

        ellipse(990+900-25*x,290+200,200,100);
        ellipse(1090+900-25*x,330+200,200,100);
        ellipse(1000+900-25*x,360+200,200,100);

        ellipse(990+300-33*x,290+300,200,100);
        ellipse(1090+300-33*x,330+300,200,100);
        ellipse(1000+300-33*x,360+300,200,100);

        ellipse(800+300-20*x,300-300,200,100);
        ellipse(880+300-20*x,340-300,200,100);
        ellipse(710+300-20*x,360-300,200,100);

        ellipse(800-900-20*x,300-100,200,100);
        ellipse(880-900-20*x,340-100,200,100);
        ellipse(710-900-20*x,320-100,200,100);

        ellipse(1500+990-30*x,290,200,100);
        ellipse(1500+1090-30*x,330,200,100);
        ellipse(1500+1000-30*x,360,200,100);
        ellipse(1500+800-30*x,300,200,100);
        ellipse(1500+880-30*x,340,200,100);
        ellipse(1500+710-30*x,360,200,100);

        ellipse(1500+990-500-16*x,290-200,200,100);
        ellipse(1500+1090-500-16*x,330-200,200,100);
        ellipse(1500+1000-500-16*x,360-200,200,100);
        ellipse(1500+800-500-16*x,300-200,200,100);
        ellipse(1500+880-500-16*x,340-200,200,100);

        ellipse(1500+880+500-20*x,340+100,200,100);
        ellipse(1500+990+500-20*x,290+100,200,100);
        ellipse(1500+1090+500-20*x,330+100,200,100);
        ellipse(1500+1000+500-20*x,360+100,200,100);

        ellipse(1500+880-700-20*x,340-100,200,100);
        ellipse(1500+990-700-20*x,290-100,200,100);
        ellipse(1500+1090-700-20*x,330-100,200,100);
        ellipse(1500+1000-700-20*x,360-100,200,100);

        ellipse(1500+800-300-10*x,300+270,200,100);
        ellipse(1500+880-300-10*x,340+270,200,100);
        ellipse(1500+710-300-10*x,360+270,200,100);

        ellipse(1500+990+500-23*x,290-200,200,100);
        ellipse(1500+1090+500-23*x,330-200,200,100);
        ellipse(1500+1000+500-23*x,360-200,200,100);

        ellipse(1500+990+300-20*x,290+300,200,100);
        ellipse(1500+1090+300-20*x,330+300,200,100);
        ellipse(1500+1000+300-20*x,360+300,200,100);

        ellipse(1500+800+300-20*x,300-300,200,100);
        ellipse(1500+880+300-20*x,340-300,200,100);
        ellipse(1500+710+300-20*x,360-300,200,100);

        ellipse(1500+800-900-20*x,300-100,200,100);
        ellipse(1500+880-900-20*x,340-100,200,100);
        ellipse(1500+710-900-20*x,320-100,200,100);
        



        //カービィ＆モーション

        y=130*sin(x)+160;         //ふわふわ浮く感じをsin関数を用いて表現しました。
        translate(50*x+500,y);         //キャラが複雑だったので、こちらの移動はtranslateを使いました。

        strokeJoin(ROUND);
        strokeWeight(3);
        stroke(#700030);






        //あし

        pushMatrix();  



        //進行方向：→
        if(X==1){
            translate(500,200);

            rotate(sin(x+PI/2)/60);        //浮かんでいる最中、足が揺れるように回転とxを用いました。
                                        //回転の中心の指定方法が分からなかったので、一度translateさせてから回転させて、戻しました。
            fill(#F466A3);                 //この作業のおかげで折り返してからのモーション設定がとても複雑になったので
            ellipse(-330,330-200,55,100);  //諦めてifを使って回転から円を作る座標まで対称になるように計算しました
            fill(#F466A3);                 //挑戦してみていただきたいくらい複雑でした。
            ellipse(-275,330-200,55,100); 

            translate(0,0);
        }



        //進行方向：←
        else{
            translate(0,200);

            rotate(-sin(x-PI/2)/60);        

            fill(#F466A3);
            ellipse(330,330-200,55,100); 
            fill(#F466A3);
            ellipse(275,330-200,55,100); 

            translate(0,0);
        }


        popMatrix();





        //顔+胴体

        pushMatrix();              //カービィの動きを観察すると、浮かぶ瞬間に膨らんでいたのでscaleを用いて拡大させて表現しました。

        translate(250,250);
        scale(0.8+1.1*(sin(x+PI*5/6+(1-X)*PI/6)/25));       //空気をかく動作と連動させるために、sin関数を用いました。・・・(＊)
                                                //単にsin関数だけだと顔が消え去ってしまったので、標準値として0.8を設定し、sin(x)を実数で割って膨らみ具合を調整しました。
        fill(#FFCDDE);                           //ここも+PI*5/6によって若干のずれがあったので、(1-X)*PI/6を加えれば対称になりました。
        ellipse(0,0,255,255);

        translate(0,0);
        popMatrix();


        //おてて

        pushMatrix();

        translate(250,250);  //体の中心を中心として手を動かすためにまず移動させて

        if(X==1){
                                
            rotate(PI*sin(x)/8+PI/5);                  //(＊)と同じようにsin関数を使いました。
            scale(0.8);

            noStroke();
            ellipse(135-250,0,55,80); 
            strokeWeight(7);
            stroke(#FFC1DC);
            arc(135-250,0,55,80,-sin(x+PI)/5+PI/9,PI/2);           //手の影もつけました。手の動きに連動するように扇形の角度にsin(x)を用いました。
            strokeWeight(3);
            stroke(#700030);
            arc(135-250,0,90,80,PI/2,PI*3/2);  
        }



        else{

            rotate(-PI*sin(x)/8-PI/5);                
            scale(0.8);

            noStroke();
            ellipse(115,0,55,80); 
            strokeWeight(7);
            stroke(#FFC1DC);
            arc(115,0,55,80,PI/2,sin(x+PI)/5-PI/9+PI);           //手の影もつけました。手の動きに連動するように扇形の角度にsin(x)を用いました。
            strokeWeight(3);
            stroke(#700030);
            arc(115,0,90,80,-PI/2,PI/2);  

        }

        translate(0,0);

        popMatrix();




        //顔(パーツ)

        pushMatrix();


        translate(250,250);

        rotate(-PI/50);            //顔のパーツを傾けたくなったので、体に沿うように回転させました。
                                

        scale(0.8+1.1*(sin(x+PI*5/6+(1-X)*PI/6)/25));

        //右目                    //以降、コピペで微調整していたので、回転の調整も加わって値がぐちゃぐちゃになってしまいました。

        stroke(#0A0046);
        fill(#0A0046);
        ellipse(X*(320-10-250),195-250,15,15);
        quad(X*(312.5-10-250),195-250,X*(312.5-10-250),220-250,X*(327.5-10-250),220-250,X*(327.5-10-250),195-250);
        ellipse(X*(320-10-250),220-250,15,15);

        noStroke();
        fill(#008CA8);
        ellipse(X*(320-10-250),195+20-250,12,12);
        quad(X*(314-10-250),195+20-250,X*(314-10-250),220-250,X*(326-10-250),220-250,X*(326-10-250),195+20-250);
        ellipse(X*(320-10-250),220-250,12,12);

        fill(#0A0046);
        ellipse(X*(320-10-250),195+10-250,12,12);
        quad(X*(314-10-250),195+10-250,X*(314-10-250),220-7-250,X*(326-10-250),220-10-250,X*(326-7-250),195+10-250);
        ellipse(X*(320-10-250),220-7-250,12,12);

        fill(255,255,255);
        ellipse(X*(320-10-250),195-250,12,12);
        quad(X*(314-10-250),195-250,X*(314-10-250),220-20-250,X*(326-10-250),220-20-250,X*(326-10-250),195-250);
        ellipse(X*(320-10-250),220-20-250,12,12);




        //左目

        stroke(#0A0046);
        fill(#0A0046);
        ellipse(X*(320-10+30-250),195-250,15,15);
        quad(X*(312.5-10+30-250),195-250,X*(312.5-10+30-250),220-250,X*(327.5-10+30-250),220-250,X*(327.5-10+30-250),195-250);
        ellipse(X*(320-10+30-250),220-250,15,15);

        noStroke();
        fill(#008CA8);
        ellipse(X*(320-10+30-250),195+20-250,12,12);
        quad(X*(314-10+30-250),195+20-250,X*(314-10+30-250),220-250,X*(326-10+30-250),220-250,X*(326-10+30-250),195+20-250);
        ellipse(X*(320-10+30-250),220-250,12,12);

        fill(#0A0046);
        ellipse(X*(320-10+30-250),195+10-250,12,12);
        quad(X*(314-10+30-250),195+10-250,X*(314-10+30-250),220-7-250,X*(326-10+30-250),220-10-250,X*(326-7+30-250),195+10-250);
        ellipse(X*(320-10+30-250),220-7-250,12,12);

        fill(255,255,255);
        ellipse(X*(320-10+30-250),195-250,12,12);
        quad(X*(314-10+30-250),195-250,X*(314-10+30-250),220-20-250,X*(326-10+30-250),220-20-250,X*(326-10+30-250),195-250);
        ellipse(X*(320-10+30-250),220-20-250,12,12);



        //ほっぺ
        fill(#FFAA9F);
        ellipse(X*30,-20,30,15);
        ellipse(X*112,-20,20,15);

        //口

        strokeWeight(3);
        stroke(#700030);
        noFill();


        arc(X*39,-11,50,50,-PI/8+PI/20+Y,0+PI/20+Y);
        arc(X*113,-11,50,50,PI-PI/20+Y,PI*9/8-PI/20+Y);
        arc(X*76,10,50,50,PI*16/12,PI*20/12);


        translate(0,0);

        popMatrix();



        if(x>=5.3||x<=-13){
            
            X=X*(-1);Y=Y+PI;
        
        }

        x=x+0.085*X;

    }//elseの

    

}//drawの